
## makeCacheMatrix returns a list of four functions(set,get,
## setInverse,getInverse)
## and this output will be the input of the second function,that is cacheSolve.
makeCacheMatrix <- function(x=matrix()) {
## makeCasheMatrix() creates a special "matrix" object as
## the default value of input x. The output is four functions for
## cacheSolve() to subset and use.
terso <- NULL
    set <- function(y) {                                        ### setting the value of x and terso in the global Env
        x <<- y                                                 
        terso <<- NULL
    }
    get <- function() x                                          ### getting the value of x
    setInverse <- function(solve) terso <<- solve                ###Setting the input as Inverse
    getInverse <- function() terso                               ### getting the value of inverse
    list(set=set,get=get,setInverse=setInverse,getInverse=getInverse) ### listing these four functions in output for use
}
## cacheSolve() function computes the inverse of the special "matrix"
## that returned above. But instead of jumping into computing, it would 
## first check if the worked has been done and stored.
## The cashed results would be returned first.
cacheSolve <- function(x,...) {
## Return a matrix that is the inverse of 'x'                   ## x stores all results of the first function
        terso <- x$getInverse()                                 ## get terso by calling getInverse()
    if(!is.null(terso)) {                                       ## If terso is not null, return the stored value.     
        message("getting cached data!!!")                       
        return(terso)
}                                                                #### Else calculate it.
data <- x$get()                                                  #### getting the matrix. 
terso <- solve(data,...)                                         #### solving its inverse 
x$setmatrix(terso)                                               #### storing the results for later-on reading
terso                                                          
}
