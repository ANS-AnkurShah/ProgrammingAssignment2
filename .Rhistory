makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <<- NULL
}
get <- function() x
setinverse <- function(inverse) i <<- inverse
getinverse <- function() i
list(set = set,
get = get,
setinverse = setinverse,
getinverse = getinverse)
}
makeC
makeCacheMatrix()
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
i <- x$getinverse()
if (!is.null(i)) {
message("getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinverse(i)
i
}
cacheSolve()
cacheSolve(x)
x1 <- makeInverse(matrix(c(1,2,3,4),2,2))
x1$getsolve()
B <- matrix(c(1,2,3,4),2,2)
B
cacheSolve(B1)
B1
cacheSolve(B1)
cacheSolve(B)
B2 <- makeCacheMatrix(B)
B2
cacheSolve(B2)
