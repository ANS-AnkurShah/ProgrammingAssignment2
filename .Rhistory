m1 <- makeCacheMatrix(m)
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getinv()
if(!is.null(inv)) {
message("getting cached result")
return(inv)
}
data <- x$get()
inv <- solve(data, ...)
x$setinv(inv)
inv
}
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinv <- function(inverse) inv <<- inverse
getinv <- function() inv
list(set = set, get = get, setinv = setinv, getinv = getinv)
}
m <- matrix(c(1:10))
m
m <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE)
m
m1 <- makeCacheMatrix(m)
m1
cacheSolve(m1)
m <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE)
m1 <- makeCacheMatrix(m)
cacheSolve(m1)
m <- matrix(c(1,2,3,4,5,11,12,13), nrow = 4, ncol = 4, byrow = TRUE)
m1 <- makeCacheMatrix(m)
cacheSolve(m1)
m <- matrix(c(1:12)),6,6)
m <- matrix(c(1:12),6,6)
m1 <- makeCacheMatrix(m)
cacheSolve(m1)
m <- matrix(1:4,2,2)
m1 <- makeCacheMatrix(m)
cacheSolve(m1)
m
cacheSolve(m1)
m
