fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
## creates "fileURL" shorthand for URL
download.file(fileURL, destfile = "./R/Coursera/Getting Cleaning Data/Quiz 1/US_communities.csv")
## downloads csv from site
list.files("./R/Coursera/Getting Cleaning Data/Quiz 1")
## gives list of files in this directory, to confirm the file downloaded properly
com_data <- read.table("./R/Coursera/Getting Cleaning Data/Quiz 1/US_communities.csv", sep = ",", header = TRUE)
## reads csv into R
## sep command specifies that commas are used as separators (i.e., csv file)
head(com_data)
## check to make sure data looks right
names(com_data)
VAL_mil <- com_data[(com_data$VAL == 24), ]
## creates "VAL_mil" data frame including only "VAL" values of 24 (e.g., >= $1m)
## BU, I couldn't figure out how to remove na values
length(na.omit(VAL_mil$VAL))
## returns length of "VAL_mil" after removing na values
## e.g., returns number of homes with value of $1m and up
gasURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
## creates "gasURL" shorthand for url
download.file(gasURL, destfile = "./R/COursera/Getting Cleaning Data/Quiz 1/gas.xlsx")
## downloads gasURL, gives it name and saves it in folder
install.packages("xlsx")
Sys.setenv(AVA_HOME = 'C:\\Program Files\\Java\\jre7')
library(xlsx)
gas_data <- read.xlsx("./R/COursera/Getting Cleaning Data/Quiz 1/gas.xlsx",sheetIndex=1,header=TRUE)
Sys.setenv(AVA_HOME = 'C://Program Files//Java//jre7')
library(xlsx)
gasURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(gasURL, destfile = "./R/COursera/Getting Cleaning Data/Quiz 1/gas.xlsx")
download.file(gasURL, destfile = "./R/Coursera/Getting Cleaning Data/Quiz 1/gas.xlsx")
gasURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(gasURL, destfile = "./R/Coursera/Getting Cleaning Data/Quiz 1/gas.xlsx")
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, destfile = "./R/Coursera/Getting Cleaning Data/Quiz 1/US_communities.csv")
download.file(gasURL, destfile = "./R/Coursera/Getting Cleaning Data/Quiz 1/gas.csv")
list.files("./R/Coursera/Getting Cleaning Data/Quiz 1")
list.files("./R/Coursera/Getting Cleaning Data/Quiz 1")
com_data <- read.table("./R/Coursera/Getting Cleaning Data/Quiz 1/US_communities.csv", sep = ",", header = TRUE)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, destfile = "./R/Coursera/Getting Cleaning Data/Quiz 1/US_communities.csv")
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, destfile = "./R/Coursera/Getting Cleaning Data/Quiz 1/US_communities.csv")
download.file(fileURL, destfile = "./R/Coursera/Getting Cleaning Data/Quiz 1/US_communities.csv")
list.files("./R/Coursera/Getting Cleaning Data/Quiz 1")
com_data <- read.table("./R/Coursera/Getting Cleaning Data/Quiz 1/US_communities.csv", sep = ",", header = TRUE)
download.file(fileURL, destfile = "C:\Users\Luke\Documents\R\Coursera\Getting Cleaning Data\Quiz 1\US_communities.csv")
download.file(fileURL, destfile = "C:\\Documents\R\Coursera\Getting Cleaning Data\Quiz 1\US_communities.csv")
download.file(fileURL, destfile = "~\R\Coursera\Getting Cleaning Data\Quiz 1\US_communities.csv")
download.file(fileURL, destfile = "~/R/Coursera/Getting Cleaning Data/Quiz 1/US_communities.csv")
list.files("./R/Coursera/Getting Cleaning Data/Quiz 1")
com_data <- read.table("./R/Coursera/Getting Cleaning Data/Quiz 1/US_communities.csv", sep = ",", header = TRUE)
com_data <- read.table("~/R/Coursera/Getting Cleaning Data/Quiz 1/US_communities.csv", sep = ",", header = TRUE)
head(com_data)
names(com_data)
VAL_mil <- com_data[(com_data$VAL == 24), ]
length(na.omit(VAL_mil$VAL))
gasURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(gasURL, destfile = "~/R/Coursera/Getting Cleaning Data/Quiz 1/gas.csv")
install.packages("xlsx")
Sys.setenv(AVA_HOME = 'C://Program Files//Java//jre7')
library(xlsx)
gas_data <- read.xlsx("./R/COursera/Getting Cleaning Data/Quiz 1/gas.xlsx",sheetIndex=1,header=TRUE)
gas_data <- read.xlsx("~R/Coursera/Getting Cleaning Data/Quiz 1/gas.xlsx",sheetIndex=1,header=TRUE)
gas_data <- read.xlsx("~/R/Coursera/Getting Cleaning Data/Quiz 1/gas.xlsx",sheetIndex=1,header=TRUE)
download.file(gasURL, destfile = "~/R/Coursera/Getting Cleaning Data/Quiz 1/gas.xlsx")
gasURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(gasURL, destfile = "~/R/Coursera/Getting Cleaning Data/Quiz 1/gas.xlsx")
install.packages("xlsx")
Sys.setenv(AVA_HOME = 'C://Program Files//Java//jre7')
install.packages("xlsx")
library(xlsx)
gas_data <- read.xlsx("~/R/Coursera/Getting Cleaning Data/Quiz 1/gas.xlsx",sheetIndex=1,header=TRUE)
head(gas_data)
read.table(gas)
read.xlsx(gas2)
gas_data <- read.xlsx("~/R/Coursera/Getting Cleaning Data/Quiz 1/gas2.xlsx",sheetIndex=1,header=TRUE)
head(gas_data)
dat <- gas_data(18:23,7:15)
dat <- gas_data[18:23,7:15]
sum(dat$Zip*dat$Ext,na.rm=T)
dat <- gas_data[c(18:23,7:15)]
sum(dat$Zip*dat$Ext,na.rm=T)
sum(dat$Zip*dat$Ext,na.rm=TRUE)
rowIndex <- 18:23
colIndex <- 7:15
dat <- read.xlsx(file="gas2.xlsx", sheetIndex=1, colIndex=colIndx, startRow=18, endRow=23, header=TRUE)
dat <- read.xlsx(file="~/R/Coursera/Getting Cleaning Data/Quiz 1/gas2.xlsx", sheetIndex=1, colIndex=colIndx, startRow=18, endRow=23, header=TRUE)
dat <- read.xlsx(file="~/R/Coursera/Getting Cleaning Data/Quiz 1/gas2.xlsx", sheetIndex=1, colIndex=colIndx, startRow=18, endRow=23, header=TRUE)
dat <- read.xlsx(file="~/R/Coursera/Getting Cleaning Data/Quiz 1/gas2.xlsx", sheetIndex=1, colIndex=colIndex, startRow=18, endRow=23, header=TRUE)
sum(dat$Zip*dat$Ext,na.rm=TRUE)
install.packages("KernSmooth")
library("KernSmooth")
cube <- function(x,n) {
x^3
}
cube(3)
x <- 1:10
if(x>5){}
if(x>5){
x <-0
}
f <- function(x){
g <- function(y){
y+z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
x <- 5
y <- if(x<3){
NA
} else {
10
}
y
x <- 2
y <- if(x<3){
NA
} else {
10
}
y
library(datasets)
data(iris)
species <- split(iris, iris$Species)
sapply(species, function(x) mean(x[, c("Sepal.Length")]))
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
pollutantmean <- function(directory, pollutant, id = 1:332){
files <- list.files(directory)
files_full <-list.files(directory, full.names=TRUE)
dat <- data.frame()
for (i in id){
dat <- rbind(dat, read.csv(files_full[i]))
}
mean(dat[[pollutant]], na.rm=TRUE)
}
souce("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332){
files <- list.files(directory)
files_full <-list.files(directory, full.names=TRUE)
dat <- data.frame()
for (i in id){
dat <- rbind(dat, read.csv(files_full[i]))
}
mean(dat[[pollutant]], na.rm=TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
setwd("~/NCIRE/Posit")
read.csv("patient_BHQ_data")
read.csv("patient_BHQ_data.csv")
Vino_BHQ <- read.csv("patient_BHQ_data.csv")
setwd("~/NCIRE/Posit")
cotes_full <- list.files("cotes", full.names = TRUE)
controls_full <- list.files("controls", full.names = TRUE)
## creates two lists, one for the contents of "cotes" folder, one for contents of "controls" folder
length(cotes_full)
length(controls_full)
## 12 csv files in cotes folder; 57 csv files in controls folder
patient <- data.frame()
for (i in 1:12){
patient <- rbind(patient, read.csv(cotes_full[i]))
}
demo_data <- rbind(patient, Vino_BHQ)
demo_data <- cbind(patient, Vino_BHQ)
demo_data <- cbind(patient, Vino_BHQ, simplify = TRUE)
demo_data <- cbind(patient, Vino_BHQ, check.names = TRUE)
library("plyr")
load("plyr")
install.packages("plyr")
rbind.fill(patient, Vino_BHQ)
merge(patient, Vino_BHQ, by="user_login")
demo_data <- merge(Vino_BHQ, patient), by="user_login")
demo_data <- merge(Vino_BHQ, patient, by="user_login")
demo_data <- merge(Vino_BHQ, patient, by="user_login", all=TRUE)
View(demo_data)
Vino_BHQ <- read.csv("patient_BHQ_data.csv")
combined <- merge(Vino_BHQ, patient, controls, by="user_login", all=TRUE)
for (i in 1:57){
controls <- rbind(controls, read.csv(controls_full[i]))
}
status <- c("control")
controls <- cbind(status, controls[c(2:33)])
controls <- data.frame()
for (i in 1:57){
controls <- rbind(controls, read.csv(controls_full[i]))
}
status <- c("control")
controls <- cbind(status, controls[c(2:33)])
combined <- merge(Vino_BHQ, patient, controls, by="user_login", all=TRUE)
View(controls)
setwd("~/NCIRE/Posit")
cotes_full <- list.files("cotes", full.names = TRUE)
controls_full <- list.files("controls", full.names = TRUE)
## creates two lists, one for the contents of "cotes" folder, one for contents of "controls" folder
Vino_BHQ <- read.csv("patient_BHQ_data.csv")
## reads Vinogradov study demographic/MCCB data from Google into R
length(cotes_full)
length(controls_full)
## 12 csv files in cotes folder; 57 csv files in controls folder
patient <- data.frame()
for (i in 1:12){
patient <- rbind(patient, read.csv(cotes_full[i]))
}
## creates single data frame with all data from "cotes" folder
status <- c("patient")
patient <- cbind(status, patient[c(2:33)])
## adds "status" column, applies "patient" value to all
Vino_data_demo <- merge(Vino_BHQ, patient, by="user_login", all=TRUE)
controls <- data.frame()
for (i in 1:57){
controls <- rbind(controls, read.csv(controls_full[i]))
}
status <- c("control")
controls <- cbind(status, controls[c(2:33)])
combined <- rbind(Vino_data_demo, controls)
combined <- rbind(Vino_data_demo, controls, all=TRUE)
combined <- merge(Vino_data_demo, controls, all=TRUE)
View(combined)
setwd("~/NCIRE/Posit")
cotes_full <- list.files("cotes", full.names = TRUE)
controls_full <- list.files("controls", full.names = TRUE)
## creates two lists, one for the contents of "cotes" folder, one for contents of "controls" folder
Vino_BHQ <- read.csv("patient_BHQ_data.csv")
## reads Vinogradov study demographic/MCCB data from Google into R
length(cotes_full)
length(controls_full)
## 12 csv files in cotes folder; 57 csv files in controls folder
patient <- data.frame()
for (i in 1:12){
patient <- rbind(patient, read.csv(cotes_full[i]))
}
## creates single data frame with all data from "cotes" folder
Vino_data_demo <- merge(Vino_BHQ, patient, by="user_login", all=TRUE)
status <- c("patient")
patient <- cbind(status, patient[c(2:33)])
## adds "status" column, applies "patient" value to all
controls <- data.frame()
for (i in 1:57){
controls <- rbind(controls, read.csv(controls_full[i]))
}
status <- c("control")
controls <- cbind(status, controls[c(2:33)])
combined <- merge(Vino_data_demo, controls, all=TRUE)
View(combined)
View(Vino_data_demo)
setwd("~/NCIRE/Posit")
cotes_full <- list.files("cotes", full.names = TRUE)
controls_full <- list.files("controls", full.names = TRUE)
## creates two lists, one for the contents of "cotes" folder, one for contents of "controls" folder
Vino_BHQ <- read.csv("patient_BHQ_data.csv")
## reads Vinogradov study demographic/MCCB data from Google into R
length(cotes_full)
length(controls_full)
## 12 csv files in cotes folder; 57 csv files in controls folder
patient <- data.frame()
for (i in 1:12){
patient <- rbind(patient, read.csv(cotes_full[i]))
}
## creates single data frame with all data from "cotes" folder
Vino_data_demo <- merge(Vino_BHQ, patient, by="user_login", all=TRUE)
status <- c("patient")
patient <- cbind(status, Vino_data_demo[c(2:48)])
View(patient)
patient <- cbind(status, Vino_data_demo[c(2:48)], na.rm=TRUE)
View(patient)
controls <- data.frame()
for (i in 1:57){
controls <- rbind(controls, read.csv(controls_full[i]))
}
status <- c("control")
controls <- cbind(status, controls[c(2:33)])
combined <- merge(patient[1:20,], controls, all=TRUE)
View(combined)
setwd("~/NCIRE/Posit")
cotes_full <- list.files("cotes", full.names = TRUE)
controls_full <- list.files("controls", full.names = TRUE)
## creates two lists, one for the contents of "cotes" folder, one for contents of "controls" folder
Vino_BHQ <- read.csv("patient_BHQ_data.csv")
## reads Vinogradov study demographic/MCCB data from Google into R
length(cotes_full)
length(controls_full)
## 12 csv files in cotes folder; 57 csv files in controls folder
patient <- data.frame()
for (i in 1:12){
patient <- rbind(patient, read.csv(cotes_full[i]))
}
## creates single data frame with all data from "cotes" folder
Vino_data_demo <- merge(Vino_BHQ, patient, by="user_login", all=TRUE)
status <- c("patient")
patient <- cbind(status, Vino_data_demo[c(2:48)])
## adds "status" column, applies "patient" value to all
controls <- data.frame()
for (i in 1:57){
controls <- rbind(controls, read.csv(controls_full[i]))
}
status <- c("control")
controls <- cbind(status, controls[c(2:33)])
combined <- merge(patient[1:20,], controls, all=TRUE)
write.csv(combined)
setwd("~/NCIRE/Posit")
cotes_full <- list.files("cotes", full.names = TRUE)
controls_full <- list.files("controls", full.names = TRUE)
## creates two lists, one for the contents of "cotes" folder, one for contents of "controls" folder
Vino_BHQ <- read.csv("patient_BHQ_data.csv")
## reads Vinogradov study demographic/MCCB data from Google into R
length(cotes_full)
length(controls_full)
## 12 csv files in cotes folder; 57 csv files in controls folder
patient <- data.frame()
for (i in 1:12){
patient <- rbind(patient, read.csv(cotes_full[i]))
}
## creates single data frame with all data from "cotes" folder
Vino_data_demo <- merge(Vino_BHQ, patient, by="user_login", all=TRUE)
status <- c("patient")
patient <- cbind(status, Vino_data_demo[c(2:48)])
## adds "status" column, applies "patient" value to all
controls <- data.frame()
for (i in 1:57){
controls <- rbind(controls, read.csv(controls_full[i]))
}
status <- c("control")
controls <- cbind(status, controls[c(2:33)])
combined <- merge(patient[1:20,], controls, all=TRUE)
write.csv(combined)
View(combined)
setwd("~/NCIRE/Posit")
cotes_full <- list.files("cotes", full.names = TRUE)
controls_full <- list.files("controls", full.names = TRUE)
## creates two lists, one for the contents of "cotes" folder, one for contents of "controls" folder
Vino_BHQ <- read.csv("patient_BHQ_data.csv")
## reads Vinogradov study demographic/MCCB data from Google into R
length(cotes_full)
length(controls_full)
## 12 csv files in cotes folder; 57 csv files in controls folder
patient <- data.frame()
for (i in 1:12){
patient <- rbind(patient, read.csv(cotes_full[i]))
}
Vino_data_demo <- merge(Vino_BHQ, patient, by="user_login", all=TRUE)
status <- c("patient")
patient <- cbind(status, Vino_data_demo)
View(patient)
controls <- data.frame()
for (i in 1:57){
controls <- rbind(controls, read.csv(controls_full[i]))
}
status <- c("control")
controls <- cbind(status, controls)
combined <- merge(patient, controls, all=TRUE)
View(combined)
?write.csv
write.csv(combined, "BHQ_patient_vs_control")
setwd("~/NCIRE/Posit")
cotes_full <- list.files("cotes", full.names = TRUE)
controls_full <- list.files("controls", full.names = TRUE)
## creates two lists, one for the contents of "cotes" folder, one for contents of "controls" folder
Vino_BHQ <- read.csv("patient_BHQ_data.csv")
## reads Vinogradov study demographic/MCCB data from Google into R
length(cotes_full)
length(controls_full)
## 12 csv files in cotes folder; 57 csv files in controls folder
patient <- data.frame()
for (i in 1:12){
patient <- rbind(patient, read.csv(cotes_full[i]))
}
## creates single data frame with all data from "cotes" folder
Vino_data_demo <- merge(Vino_BHQ, patient, by="user_login", all=TRUE)
status <- c("patient")
patient <- cbind(status, Vino_data_demo)
## adds "status" column, applies "patient" value to all
controls <- data.frame()
for (i in 1:57){
controls <- rbind(controls, read.csv(controls_full[i]))
}
status <- c("control")
controls <- cbind(status, controls)
combined <- merge(patient, controls, all=TRUE)
write.csv(combined, "BHQ_patient_vs_control")
setwd("~/NCIRE/Posit")
cotes_full <- list.files("cotes", full.names = TRUE)
controls_full <- list.files("controls", full.names = TRUE)
## creates two lists, one for the contents of "cotes" folder, one for contents of "controls" folder
Vino_BHQ <- read.csv("patient_BHQ_data.csv")
## reads Vinogradov study demographic/MCCB data from Google into R
length(cotes_full)
length(controls_full)
## 12 csv files in cotes folder; 57 csv files in controls folder
patient <- data.frame()
for (i in 1:12){
patient <- rbind(patient, read.csv(cotes_full[i]))
}
## creates single data frame with all data from "cotes" folder
Vino_data_demo <- merge(Vino_BHQ, patient, by="user_login", all=TRUE)
status <- c("patient")
patient <- cbind(status, Vino_data_demo)
## adds "status" column, applies "patient" value to all
controls <- data.frame()
for (i in 1:57){
controls <- rbind(controls, read.csv(controls_full[i]))
}
status <- c("control")
controls <- cbind(status, controls)
combined <- merge(patient, controls, all=TRUE)
write.csv(combined, "BHQ_patient_vs_control.csv")
?solve
read.csv("patient_BHQ_data.csv")
Vino_BHQ <- read.csv("patient_BHQ_data.csv")
Mel_demo <- read.csv("demo_melanie_transform")
Mel_demo <- read.csv("demo_melanie_transform.csv")
Mel_demo <- read.csv("demo_melanie_transform.csv")
rbind(Vino_BHQ, Mel_demo)
rbind(Vino_BHQ, Mel_demo, all=TRUE)
merge(Vino_BHQ, Mel_demo, all=TRUE)
Vino_Mel <- rbind(Vino_BHQ, Mel_demo, all=TRUE)
Vino_mel <- merge(Vino_BHQ, Mel_demo, all=TRUE)
View(Vino_mel)
Vino_mel <- merge(Vino_BHQ, Mel_demo, by="user_login", all=TRUE)
Vino_mel <- merge(Vino_BHQ, Mel_demo, by="user_login", by="Age_years", all=TRUE)
Vino_mel <- merge(Vino_BHQ, Mel_demo, by = c(""), all=TRUE)
colname(Mel_demo)
colnames(Mel_demo)
Vino_mel <- merge(Vino_BHQ, Mel_demo, by = c("user_id", "user_login", "Age_years", "Gender", "Education_years", "Parent_Education_seeDataKey"), all=TRUE)
colnames(Vino_BHQ)
Vino_mel <- merge(Vino_BHQ, Mel_demo, by = c(user_login", "Age_years", "Gender", "Education_years", "Parent_Education_seeDataKey"), all=TRUE)
Vino_mel <- merge(Vino_BHQ, Mel_demo, by = c("user_login", "Age_years", "Gender", "Education_years", "Parent_Education_seeDataKey"), all=TRUE)
Vino_BHQ <- read.csv("patient_BHQ_data.csv")
Mel_demo <- read.csv("demo_melanie_transform.csv")
colnames(Vino_BHQ)
colnames(Mel_demo)
View(Vino_mel)
Vino_mel <- merge(Vino_BHQ, Mel_demo, by = c("user_login", "Age", "Gender", "Education", "Parent_education"))
Mel_demo <- read.csv("demo_melanie_transform.csv")
Vino_mel <- merge(Vino_BHQ, Mel_demo, by = c("user_login", "Age", "Gender", "Education", "Parent_education"))
Vino_mel <- merge(Vino_BHQ, Mel_demo, by = c("user_login", "Age", "Gender", "Education", "Parent_education"), all=TRUE)
View(Vino_mel)
Mel_demo <- read.csv("demo_melanie_transform.csv")
Vino_mel <- merge(Vino_BHQ, Mel_demo, by = c("user_login", "Age", "Gender", "Education", "Parent_education"), all=TRUE)
View(Vino_mel)
demo <- Vino_mel
setwd("~/R")
file.edit("cachematrix.R")
setwd("~/R"ProgrammingAssignment2)
setwd("~/R"ProgrammingAssignment2"")
setwd("~/R"ProgrammingAssignment2")
setwd("~/R/ProgrammingAssignment2")
file.edit("cachematrix.R")
setwd("~/ProgrammingAssignment2")
setwd("~/R/ProgrammingAssignment2")
file.edit("cachematrix.R")
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
m<-NULL
set<-function(y){
x<<-y
m<<-NULL
}
get<-function() x
setmatrix<-function(solve) m<<- solve
getmatrix<-function() m
list(set=set, get=get,
setmatrix=setmatrix,
getmatrix=getmatrix)
}
cacheSolve <- function(x=matrix(), ...) {
m<-x$getmatrix()
if(!is.null(m)){
message("getting cached data")
return(m)
}
matrix<-x$get()
m<-solve(matrix, ...)
x$setmatrix(m)
m
}
a <- makeCacheMatrix()
a$set(matrix(1:4,2,2)
)
a$set(matrix(1:4,2,2))
cacheSolve(a)
a
cacheSolve(a)
m<-Null
m<-NULL
m
?matrix
