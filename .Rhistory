1+1
2/9
x<-2
x
y=5
y
a<-b<7
a<-b<-7
a
b
assign("j",4)
j
library(ggplot2)
install.packages(ggplot2)
intall.packages("devtools")
intall.packages("ggplot2")
find.packages("devtools")
find.package("devtools")
install.packages("KernSmooth")
library("KernSmooth", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
x<-1:4
y<-2
x+y
mean(mydata$Solar.R [mydata$Ozone>31 & mydata$Temp>90], na.rm=TRUE)
mean(hw1_data.csv [hw1_data$Ozone>31 & hw1_data$Temp>90], na.rm=TRUE)
x <- c(4, "a", TRUE)
x
class(x)
x <- c(4, TRUE)
class(x)
x <- 1:4
y <-2:3
x+y
library
clear
library("swirl")
swirl()
0
help.start()
5+7
x<-5+7
x
help.start()
mean("Ozon")
header("hw1_data.csv")
header()
data<-read.cvs("hw1_data.csv")
data <- read.cvs ("hw1_data")
file("hw1_data.csv")
header("hw1_data.csv")
colclasses("hw1_data.csv")
data<-file("hw1_data.csv")
file(data)
hearder(data)
header(data)
colClassed(data)
colClasses(data)
data <- read.table ("hw1_data.csv")
data <- read.table (data)
read.table("hw1_data.csv", hearder = TRUE, sep = ")
clear()
hw1_data <- read.delim("~/Google Drive/R/coursera/Week 1/hw1_data.csv")
View(hw1_data)
dim(hw1_data)
rm(hw1_data)
hw1_data <- read.delim("~/Google Drive/R/coursera/Week 1/hw1_data.csv", dec=",", quote="")
View(hw1_data)
rm(hw1_data)
hw1_data <- read.delim("~/Google Drive/R/coursera/Week 1/hw1_data.csv")
View(hw1_data)
View(hw1_data)
rm(hw1_data)
hw1_data <- read.delim("~/Google Drive/R/coursera/Week 1/hw1_data.txt")
View(hw1_data)
dim(hw1_data)
names(hw1_data)
mean ("Ozone")
summary (hw1_data)
rm(Hw1_data)
cube <- function(x,n) {}
clear()
cube <- function(x,n) {}
cube <- function(x,n){x^3}
cube(3)
x<- 1:10
if (x<5) {
x<-0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 10
x + g(x)
}
function(3)
x<-3
f(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_list <- list.files(getwd(),full.names = TRUE)
data <- data.frame()
for (i in 1:332) {
data <- rbind(data, read.csv(files_list[i]))
}
if (pollutant == 'sulfate') {
mean(data$sulfate, na.rm = TRUE)
} else if (pollutant == 'nitrate') {
mean(data$nitrate, na.rm = TRUE)
}
}
pollutantmean("specdata","sulfate",1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_list <- list.files(getwd(),full.names = TRUE)
data <- data.frame()
for (i in 1:332) {
data <- rbind(data, read.table(files_list[i], header=TRUE, sep = ","))
}
if (pollutant == 'sulfate') {
mean(data$sulfate, na.rm = TRUE)
} else if (pollutant == 'nitrate') {
mean(data$nitrate, na.rm = TRUE)
}
}
pollutantmean("specdata","sulfate",1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_list <- list.files(getwd(),full.names = TRUE)
data <- data.frame()
for (i in 1:332) {
data <- rbind(data, read.table(file=files_list[i], header=TRUE, sep = ","))
}
if (pollutant == 'sulfate') {
mean(data$sulfate, na.rm = TRUE)
} else if (pollutant == 'nitrate') {
mean(data$nitrate, na.rm = TRUE)
}
}
pollutantmean("specdata","sulfate",1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_list <- list.files(getwd(),full.names = TRUE)
data <- data.frame()
for (i in 1:332) {
data <- rbind(data, read.table("files_list", header=TRUE, sep = ","))
}
if (pollutant == 'sulfate') {
mean(data$sulfate, na.rm = TRUE)
} else if (pollutant == 'nitrate') {
mean(data$nitrate, na.rm = TRUE)
}
}
pollutantmean("specdata","sulfate",1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_list <- list.files(path=directory, full.names = TRUE)
data <- data.frame()
for (i in 1:332) {
data <- rbind(data,read.csv(files_list[i]))
}
if (pollutant == 'sulfate') {
mean(data$sulfate, na.rm = TRUE)
} else if (pollutant == 'nitrate') {
mean(data$nitrate, na.rm = TRUE)
}
}
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","sulfate",1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_list <- list.files(path=directory, full.names = TRUE)
data <- data.frame()
for (i in 1:332) {
data <- rbind(data,read.csv(files_list[i]))
}
if (pollutant == 'sulfate') {
mean(data$sulfate, na.rm = TRUE)
} else (pollutant == 'nitrate') {
mean(data$nitrate, na.rm = TRUE)
}
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_list <- list.files(path=directory, full.names = TRUE)
data <- data.frame()
for (i in 1:332) {
data <- rbind(data,read.csv(files_list[i]))
}
if (pollutant == 'sulfate') {
mean(data$sulfate, na.rm = TRUE)
} else if (pollutant == 'nitrate') {
mean(data$nitrate, na.rm = TRUE)
}
}
pollutantmean <- function(directory, pollutant, id = 1:332)
clear
pollutantmean("specdata","sulfate",1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_list <- list.files(path=directory, full.names = TRUE)
data <- data.frame()
for (i in 1:332) {
data <- rbind(data,read.csv(files_list[i]))
}
if (pollutant == 'sulfate') {
mean(data$sulfate, na.rm = TRUE)
} else if (pollutant == 'nitrate') {
mean(data$nitrate, na.rm = TRUE)
}
}
pollutantmean("specdata","sulfate",1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_list <- list.files(path=directory, full.names = TRUE)
data <- data.frame()
for (i in 1:332) {
data <- rbind(data,read.csv(files_list[i]))
}
if (pollutant == 'sulfate') {
mean(data$sulfate, na.rm = TRUE)
} else {
mean(data$nitrate, na.rm = TRUE)
}
}
pollutantmean("specdata","sulfate",1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_list <- list.files(getwd(),full.names = TRUE)
data <- data.frame()
for (i in 1:332) {
data <- rbind(data, read.csv(files_list[i]))
}
if (pollutant == 'sulfate') {
mean(data$sulfate, na.rm = TRUE)
} else if (pollutant == 'nitrate') {
mean(data$nitrate, na.rm = TRUE)
}
}
pollutantmean("specdata","sulfate",1:10)
source("pollutantmean.R")
x <- c(4, "a", TRUE)
class()
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x,y)
x <- list(2, "a", "b", TRUE)
x [[2]]
x <- 1:4
y <- 2:3
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] == 4
x[x >= 11] <- 4
x
library(datasets)
data(iris)
?iris
mean(iris[iris$Species == "virginica",]$Sepal.Length)
library(datasets)
data(mtcars)
?mtcars
split(mtcars, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
debug(ls)
source('~/.active-rstudio-document')
m <- matrix(c(-1, -2, 1, 1), 2,2)
x <- makeCacheMatrix(m)
x$get()
inv <- cacheSolve(x)
inv
inv <- cacheSolve(x)
m
