add2 <- function(x,y){
x + y
}
add2(3,5)
above10 <- function(x){
use <- x > 10
x[use]
}
x < 1:20
x <- 1:20
above(x)
above10(x)
above <- function(x,n){
use <- x > n
x[use]
}
above(x, 12)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
columnmean(matrix(1:6, 4,5))
columnmean(matrix(1:4, 4,5))
TRUE == TRUE
5 NOT 7
5 NOT != 7
5 != 7
!false
!FALSE
!(0 >= -1)
(TRUE != FALSE) == !(6 == 7)
(TRUE != FALSE)
!(6 == 7)
!(0 >= -1)
FALSE || TRUE && FALSE
FALSE && 6 >= 6 || 7 >= 8 || 50 <= 49.5
!isTRUE(8 != 5)
!isTRUE(4 < 3)
identical('hello', 'Hello')
identical(4, 3.1)
identical(5 > 4, 3 < 3.1)
!identical(7,7)
xor(4 >= 9, 8 != 8.0)
any(ints == 10)
ints <- sample(10)
any(ints == 10)
all(ints == 10)
vector <- c(9,5,6)
vector[-1]
vector[-1]
vector[length(vector)]
getwd()
setwd("~/Coursera-R/specs/specdata")
getwd()
archivo <- read.csv('001.csv')
archivo
head(archivo)
lapply(X = archivo, FUN = mean)
lapply(X = archivo, FUN = mean, na.rm = T)
lapply(X = archivo$sulfate, FUN = mean, na.rm = T)
lapply(X = archivo, FUN = mean, na.rm = T)
str(apply)
mi_df <- data.frame((col1 = 1:3, col2 = 4:6))
mi_df <- data.frame(col1 = 1:3, col2 = 4:6)
mi_df
definitivo <- as.matrix(mi_df)
definitivo
apply(X = definitivo, MARGIN = 1, FUN = sum)
apply(X = definitivo, MARGIN = 2, FUN = sum)
pwd()
getwd()
setwd("~/Coursera-R/ProgrammingAssignment2")
ls
ls()
