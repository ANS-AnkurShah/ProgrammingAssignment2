myfunction <- function() (
x <- rnorm(100)
mean(x)
)
myfunction <- function() (
x <- rnorm{100}
mean(x)
)
mean(x)
mean = x
mean = x
myfunction = function() (
(x) = rnorm(100),
mean = x
)
(x) = rnorm(100)
myfunction = function() {
x = rnorm(100)
mean = x
}
ls()
myfunction.csv
myfunction <-function() {
x <- rnorm(100)
mean(x)
}
myfunction.csv
myfunction()
myfunction()
myfunction()
intsall.packages ("swirl")
installed.packages("swirl")
library("swirl")
install.packages("swirl")
install_from_swirl("R programming")
library("swirl")
install.packages("swirl")
library("swirl")
getwd()
getwd()C:\Users\Pedro Ramos\AppData\Local\Temp\RtmpyuNY8M\downloaded_packages
install.packages("swirl")
library("swirl")
library("swirl")
GetData<- function(x) {
Mydata<-data.frame() ##Create a blank dataframe
filename = list.files("C:/Users/Username/Box Sync/Desktop/datasciencecoursera/specdata", full.names= TRUE) ##Generate a list of the 332 CSV
for (i in 1:x){ ##Start loop
Datatable <-read.csv(filename[i],header=TRUE) ##read each individual CSV
Mydata<-rbind(Datatable,Mydata) ##Append it to the datatable
}
summary(Mydata)
}
pollutantmean <- function(directory, pollutant, id = 1:332)
{
#create a list of files
files_full <- list.files(directory, full.names = TRUE)
# create an empty data frame
dat <- data.frame()
for (i in id)
{
#add files to main data
dat <- rbind(dat, read.csv(files_full[i]))
}
#Calulate mean
mean_data <- mean(dat[, pollutant], na.rm = TRUE)
return(mean_data)
}
load("~/.RData")
load("~/.RData")
setwd("~/ProgrammingAssignment2")
source("~/ProgrammingAssignment2/cachematrix.R")
source("~/ProgrammingAssignment2/cachematrix.R")
source("~/ProgrammingAssignment2/cachematrix.R")
my_matrix <- makeCacheMatrix(matrix(1:4, 2, 2))
> my_matrix$get()
source("ProgrammingAssignment2/cachematrix.R")
source("~/ProgrammingAssignment2/cachematrix.R")
my_matrix <- makecachematrix(matrix(1:4, 2, 2))
my_matrix$get()
cachesolve(my_matrix)
source("~/ProgrammingAssignment2/cachematrix.R")
cachesolve(my_matrix)
my_matrix <- makecachematrix(matrix(1:4, 2, 2))
> my_matrix$get()
source("~/ProgrammingAssignment2/cachematrix.R")
my_matrix <- makecachematrix(matrix(1:4, 2, 2))
my_matrix$get()
> cacheSolve(my_matrix)
cacheSolve(my_matrix)
cachesolve(my_matrix)
source("~/ProgrammingAssignment2/cachematrix.R")
my_matrix <- makecachematrix(matrix(1:4, 2, 2))
my_matrix$get()
cachesolve(my_matrix)
my_matrix$getInverse()
cacheSolve(my_matrix)
cachesolve(my_matrix)
source("~/ProgrammingAssignment2/cachematrix.R")
my_matrix <- makecachematrix(matrix(1:4, 2, 2))
my_matrix$get()
cachesolve(my_matrix)
source("~/ProgrammingAssignment2/cachematrix.R")
funs <- makeCacheMatrix()
funs$set(matrix(1:4, 2))
funs$get()
funs <- makeCacheMatrix()
funs$set(matrix(1:4, 2))
funs$get()
funs$getInverse(matrix(1:4, 2))
cacheSolve(funs)
source("~/ProgrammingAssignment2/cachematrix.R")
$ git show
source("~/ProgrammingAssignment2/cachematrix.R")
