source(swirl)
library(swirl)
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,0.5)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
swirl()
num_vect<-c(0.5,0.55,-10,6)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,sep=" ")
paste(my_char,collapse = " ")
my_name=c(my_char,"Dimitris")
my_name
paste(my_name,collapse=" ")
paste("Hello", "world!",sep=" ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_data)
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!.is.na(x)&x>0]
x[!is.na(x)&x>0]
x[seq(3,7,2)]
x[c(seq(3,7,2))]
x[3 5 7]
x[c(3 5 7)]
v<-seq(3,5,2)
v<-c(3,5,7)
[c(3,5,6)]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
swirl()
my_vector<-c(1:20)
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
m<-c("Bill","Gina", "Kelly", "Sean")
patients<-c("Bill","Gina", "Kelly", "Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
info()
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(cnames)
colnames(my_data)<-cnames
my_data
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE&FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE|c(TRUE,FALSE,FALSE)
TRUE||c(TRUE,FALSE,FALSE)
5>8|| 6!=8 && 4>3.9
isTRUE(6>4)
identical("twins","twins")
xor(5==6,FALSE)
xor(5==6,!FALSE)
itns<-sample(10)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
library(airquality)
library(datasets)
source(airquality)
library(airquality)
source(airquality)
source(airquality)
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<-class(flags)
cls_list<-class(flags,class)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flag[,11:17]
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals<-lappy(flags,unique())
unique_vals<-lapply(flags,unique())
unique_vals<-lapply(flags,unique
unique_vals<-lapply(flags,unique)
unique_vals<-lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(unique_vals,unique)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
library(swirl)
swirl()
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
flags$landmass
tables(flags$landmass)
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
library(datasets)
data(iris)
?iris
summary(iris)
class(iris)
attributes(iris)
tapply(iris$Sepal.Length,iris$Species,mean)
apply(iris, 2, mean)
apply(iris, 2, mean,rm.na=TRUE)
colMeans(iris)
iris
attributes(iris)
iris[,1:4]
rowMeans(iris[,1:4])
c<-rowMeans(iris[,1:4])
class(c)
library(datasets)
data(mtcars)
?mtcars
attributes(mtcars)
head(mtcars)
tapply(mtcars$mpg,mtcars$cyl,mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$hp,mtcars$cyl,mean)
c<-tapply(mtcars$hp,mtcars$cyl,mean)
class(c)
abs(c[1,3]-c[1,1])
abs(c[3]-c[1])
round(abs(c[3]-c[1]))
debug(ls)
ls
Q
undebug(ls)
undebug(ls)
Q
library(datasets)
data(iris)
tapply(iris$Sepal.Length,iris$Species,mean)
sapply(iris,mean)
apply(iris,1,mean)
apply(iris,1,mean,rm.na=TRUE)
apply(iris,2,mean)
apply(iris[,1:4],2,means)
apply(iris[,1:4],2,mean)
class(iris[,1:4])
rowMeans(iris[, 1:4])
data(mtcars)
tapply(mtcars$mpg,mtcars$cyl,mean)
with(mtcars, tapply(mpg, cyl, mean))
c<-tapply(mtcars$hp,mtcars$cyl,mean)
round(abs(c[3]-c[1]))
debug(ls)
apply(iris, 1, mean)
apply(iris, 2, mean)
getwd()
setwd("/Users/dimitris/Desktop/ProgrammingAssignment2")
source("cachematrix.R")
z<-matrix(c(1,2,1,2),2,2)
x<-makeCacheMatrix(z)
cacheSolve(x)
z<-matrix(c(1,4,3,2),2,2)
x<-makeCacheMatrix(z)
cacheSolve(x)
z<-matrix(c(1,0,0,1),2,2)
x<-makeCacheMatrix(z)
cacheSolve(x)
