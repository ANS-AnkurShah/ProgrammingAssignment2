str (test_pol)
cor(read.csv(test_pol, use = "complete.obs")
)
cor(test_pol, use = "complete.obs")
cor(test_pol( ,2:3), use = "complete.obs")
cor(test_pol[( ,2:3], use = "complete.obs")
cor(test_pol[ ,2:3], use = "complete.obs")
str(test_pol)
cor(test_pol[ ,2:4], use = "complete.obs")
cor(test_pol[ ,2:3], use = "complete.obs")
cor(test_pol[ ,2:3], use = "complete.obs", method = "kendall")
cor(test_pol[ ,2:3], use = "complete.obs", method = "spearman")
cor(test_pol[ ,2:3], use = "everything", method = "spearman")
cor(test_pol)
cor(test_pol[ ,1])
cor(test_pol[ ,2:3], use = "everything", method = "spearman")
cor(test_pol[ ,2:3])
cor(test_pol[ ,1])
cor(test_pol[ ,2])
cor(test_pol[ ,1:2])
cor(test_pol[ ,2:3])
cor(test_pol[ ,2:4])
cor(test_pol[2:4])
cor(test_pol[2:3])
complete_obs <- data.frame()
complete_obs
num_obs <- complete(directory)
num_obs
cor(read.csv(pollutant_file_names[1]))
cor(read.csv(pollutant_file_names[1]),2:3)
read.csv(pollutant_file_names[1])
source(corr.R)
source("corr.R")
source("corr.R")
pollutant_file_names <- list.files("specdata", full.names=TRUE)
num_obs <- complete("specdata")
correlations <- data.frame()
nrow(num_obs)
for (i in nrow(numb_obs)) {}
for (i in nrow(numb_obs)) {
if num_bos[i,2] > 150
num_obs[1,2]
source("corr.R")
?if
()
?if
if(x > 3) {
y <- 10
} else {
y <- 0
}
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
for (i in nrow(num_obs)) {
if (num_obs[i,2] > 150){
temp_array <- read.csv(pollutant_file_names[i])
temp2 <- cor(temp_array)
correlations <- rbind(correlations, temp2)
}
}
coorelations
temp_array
tempdir()
temp2
num_obs
temp_arry <- read.csv(pollutant_file_names[331])
temp_array <- read.csv(pollutant_file_names[331])
temp_array
cor(temp_array)
cor(temp_array[2:3])
source("corr.R")
cr <- corr("specdata", 150)
cr
temp_array
cor(temp_array)
cor(temp_array)
cor(temp_array[2:3])
is.numberic(temp_array[2])
is.numeric(temp_array[2])
is.numeric(temp_array[3])
is.numeric(temp_array[4])
is.numeric(temp_array[1])
temp_array
str(temp_array)
is.numeric(temp_array[1], use = "complete.obs")
cor(temp_array[2:3], use = "complete.obs")
pollutant_file_names
num_obs
correlations
temp_array <- read.csv(pollutant_file[330])
temp_array <- read.csv(pollutant_files[330])
temp_array <- read.csv(pollutant_file_names[330])
temp_array
temp2 <- cor(temp_array[2;3], use = "complete.obs")
cor(temp_array[2;3], use = "complete.obs")
temp2 <- cor(temp_array[2:3], use = "complete.obs")
temp2
str temp2
str(temp2)
summary(temp2)
head(temp2)
temp2 <- cor(temp_array[2], use = "complete.obs")
temp2
source("corr.R")
corr("specdata", 150)
correlations
temp_array
temp2
temp2
cov(temp_array[2], use = "complete.obs")
cov(temp_array[2:3], use = "complete.obs")
cov(temp_array[2,3], use = "complete.obs")
cov(temp_array[2], temp_arry[3], use = "complete.obs")
cov(temp_array[,2], temp_arry[,3], use = "complete.obs")
temp_array[2]
temp_array[3]
cov(temp_array[,2], y = temp_arry[,3], use = "complete.obs")
cov(temp_array[,2], y = temp_array[,3], use = "complete.obs")
source("corr.R")
corr("specdata", 150)
temp2 <- cor(temp_array[2], y = temp_array, use = "complete.obs")
temp2 <- cor(temp_array[2], y = temp_array[3], use = "complete.obs")
temp2
temp2[1]
source("corr.R")
corr("specdata", 150)
correlations
correlations <- rbind(correlations, temp2[1]
)
correlations
correlations
?vector
source("corr.R")
corr("specdata", 150)
correlations <- vector(mode = "numeric")
correlations
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 5000)
source("corr.R")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
print threshold
pollutant_file_names <- list.files(directory, full.names=TRUE)
head(pollutant_file_names)
num_obs <- complete(directory)
head(num_obs)
correlations <- vector(mode = "numeric")
correlations
for (i in nrow(num_obs)) {
i
if (num_obs[i,2] > threshold){
temp_array <- read.csv(pollutant_file_names[i])
temp_array
temp2 <- cor(temp_array[2], y = temp_array[3], use = "complete.obs")
temp2
correlations <- rbind(correlations, temp2[1])
correlations
}
}
correlations
}
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
threshold
pollutant_file_names <- list.files(directory, full.names=TRUE)
head(pollutant_file_names)
num_obs <- complete(directory)
head(num_obs)
correlations <- vector(mode = "numeric")
correlations
for (i in nrow(num_obs)) {
i
if (num_obs[i,2] > threshold){
temp_array <- read.csv(pollutant_file_names[i])
temp_array
temp2 <- cor(temp_array[2], y = temp_array[3], use = "complete.obs")
temp2
correlations <- rbind(correlations, temp2[1])
correlations
}
}
correlations
}
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
threshold
pollutant_file_names <- list.files(directory, full.names=TRUE)
head(pollutant_file_names)
num_obs <- complete(directory)
head(num_obs)
correlations <- vector(mode = "numeric")
correlations
for (i in nrow(num_obs)) {
i
if (num_obs[i,2] > threshold){
temp_array <- read.csv(pollutant_file_names[i])
temp_array
temp2 <- cor(temp_array[2], y = temp_array[3], use = "complete.obs")
temp2
correlations <- rbind(correlations, temp2[1])
correlations
}
}
correlations
}
corr <- function(directory = "specdata", threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
threshold
pollutant_file_names <- list.files(directory, full.names=TRUE)
head(pollutant_file_names)
num_obs <- complete(directory)
head(num_obs)
correlations <- vector(mode = "numeric")
correlations
for (i in nrow(num_obs)) {
i
if (num_obs[i,2] > threshold){
temp_array <- read.csv(pollutant_file_names[i])
temp_array
temp2 <- cor(temp_array[2], y = temp_array[3], use = "complete.obs")
temp2
correlations <- rbind(correlations, temp2[1])
correlations
}
}
correlations
}
source("corr.R")
source("corr.R")
corr()
corr()
threshold
continue
help()
exit
source("corr.R")
corr("specdata", 150)
corr("specdata", 150)
corr("specdata", 150)
directory <- "specdata"
threshold <- 150
directory
threshold
pollutant_file_names <- list.files(directory, full.names=TRUE)
head(pollutant_file_names)
num_obs <- complete(directory)
directory
threshold
num_obs
nrow(num_obs)
for (i in 332) {}
for (i in 332) {}
for (i in 332) {
if (num_obs[i,2]) > threshold){
for (i in nrow(num_obs)) {
if (num_obs[i,2] > threshold){
temp_array <- read.csv(pollutant_file_names[i])
temp2 <- cor(temp_array[2], y = temp_array[3], use = "complete.obs")
correlations <- rbind(correlations, temp2[1])
}
}
source("corr.R")
for (i in 332 {
if (num_obs[i,2] > threshold){
temp_array <- read.csv(pollutant_file_names[i])
temp2 <- cor(temp_array[2], y = temp_array[3], use = "complete.obs")
correlations <- rbind(correlations, temp2[1])
}
}
source("corr.R")
source("corr.R")
source("corr.R")
for (i in nrow(num_obs)) {
if (num_obs[i,2] > threshold) {
temp_array <- read.csv(pollutant_file_names[i])
temp2 <- cor(temp_array[2], y = temp_array[3], use = "complete.obs")
correlations <- rbind(correlations, temp2[1])
}
}
for (i in nrow(num_obs)) {
if (num_obs[i,2] > threshold) {
temp_array <- read.csv(pollutant_file_names[i])
temp2 <- cor(temp_array[2], y = temp_array[3], use = "complete.obs")
correlations <- rbind(correlations, temp2[1])
}
}
num_obs
for (i in nrow(num_obs)) {
if (num_obs[i,2] > threshold) {
temp_array <- read.csv(pollutant_file_names[i])
temp2 <- cor(temp_array[2], y = temp_array[3], use = "complete.obs")
correlations <- rbind(correlations, temp2[1])
}
}
threshold
head(temp_array)
temp2
correlations
num_obs[330,2]
source("corr.R")
corr("specdata", 150)
correlations
temp2
temp2 <- cor(temp_array[2], y = temp_array[3], use = "complete.obs")
temp2
temp2[1]
correlations <- rbind(correlations, temp2[1])
correlations
correlations <- rbind(correlations, temp2[1])
correlations <- rbind(correlations, temp2[1])
correlations
correlations <- vector("numeric")
correlations <- vector(mode = "numeric")
class)corrlections
class(corrlections)
class(correlations)
correlations <- vector("numeric")
class(correlations)
source("corr.R")
corr("specdata", 150)
correlations
source("corr.R")
corr("specdata", 150)
correlations
corr("specdata", 150)
threshold
directory
head(pollutant_file_names)
head(num_obs)
correlations
temp2
temp_array
i
i
correlations <- cbind(correlations, temp2[1])
correlations
correlations <- cbind(correlations, temp2[1])
correlations <- cbind(correlations, temp2[1])
correlations <- cbind(correlations, temp2[1])
correlations
summary correlations
summary(correlations)
corr("specdata", 150)
temp2
correlations
i
head(temp_array)
temp2
correlations
print(correclations)
print(correlations)
print(num_obs)
source("corr.R")
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
source("corr.R")
source("corr.R")
corr("specdata", 150)
if (num_obs[i,2] > threshold){}
if (num_obs[i,2] > threshold){print"hello"}
num_obs[1,2]
i
source("corr.R")
corr("specdata", 150)
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
correlations
source("corr.R")
corr("specdata", 150)
correlations
corr("specdata", 5000)
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
corr("specdata", 400)
correlations
source("corr.R")
corr("specdata", 400)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
cr <- corr("specdata", 150)
cr
head(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
submit()
source("corr.R")
submit()
submit
submit()
swirl()
libraray(swirl)
library(swirl)
swirl
swirl()
files_full
summary(files_full)
?match.fun
?||
||
x <- list(a = 1:5, b = rnorm(10))
x
lapply(x,mean)
library(datasets)
?iris
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
m
x
getmean
source(makeVector)
source(makeVector)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(1:10)
ls()
gwd()
gwd
dir()
ls()
dir()
setwd("~/Documents/ProgrammingAssignment2")
ls()
dir()
source(cachematrix)
dir()
sounrce(cachematrix.R)
sounrce(cachematrix)
source(cachematrix.R)
source(cachematrix)
dir()
dir()
source(cachematrix)
source(cachematrix.r)
?"source"
source(cachematrix)
dir()
source(corr)
