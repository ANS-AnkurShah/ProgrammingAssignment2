+#makeCacheMatrix
 + makeCacheMatrix <- function(x = numeric()) {
 ++     inv <- NULL
 ++     set <- function(y) {
 ++         x <<- y
 ++         inv <<- NULL
 ++     }
 ++     get <- function() x
 ++     setmean <- function(mean) inv <<- mean
 ++     getmean <- function() inv
 ++     list(set = set, get = get,setmean= setmean,getmean = getmean)
 ++ }
 +# makeCacheMatrix <- function(x = numeric())
 +
 +#makeCacheSolve
 + cacheSolve <- function(x, ...) {
 ++     inv <- x$getinverse()
 ++     if(!is.null(inverse)) {
 ++     message("getting cached data")
 ++     return(inv)
 ++     }
 ++     data <- x$get()
 ++     inv <- function(data, ...)
 ++     x$setinverse(inv)
 ++     inv
 ++     }
 +
 +# cacheSolve <- function(x, ...)
 +
 +#Computing the inverse of a square matrix can be done with the solve function in R. 
 +For example, if X is a square invertible matrix, then solve(X) returns its inverse.
 +
 +if(!delta==0)
 ++ {
 ++ inv <- solve(data, ...)
 ++     }
 +
 +> if (!is.null(inv)){}
 +# NULL
