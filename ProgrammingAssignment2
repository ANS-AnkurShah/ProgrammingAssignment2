#Cache the inverse of the matrix

makeCacheMatrix <- function(x = matrix()) {
   m <- NULL
   set <- function(y) {
     x <<- y
     m <<- NULL
   }
   get <- function() x
   setinv <- function(inverse) m <<- inverse
   getinv <- function() m
   list(set = set, get = get,
        setinv = setinv,
        getinv = getinv)
 }
 
 #Check cache for matrix inverse, otherwise compute inverse on new matrix
 
 cacheSolve <- function(x, ...) {
   m <- x$getinv()
   if(!is.null(m)) {
     message("getting cached data")
     return(m)
   }
   data <- x$get()
   m <- solve(data, ...)
   x$setinv(m)
   m
 }
