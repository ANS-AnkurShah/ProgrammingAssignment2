The first function, makeVector creates a special “vector”, which is really a list containing a function to:
1. set the derivative of x
2. get the derivative of x
3. set the derivative of y
4. get the derivative of y

makeCacheFunction < - function [Curvature_T] = given(V_x.V_y,2) {
%Input the value of x and y
%Input the value of time for t
%Define the radius of Curvature T    }


Curvature_T=[(V_x1^2+V_y1^2)^(1/2)/([V_x1*V_y2]-(V_y1*V_x2))];

{    
get <- Derivative2x = diff(V_x,2);
           V_x2 = subs(Derivative2x_1);
setDerivative <- Derivative2x = diff(V_x,2) <<- solveDerivative

get <- Derivative2y= diff(V_x,2);
           V_y2= subs(Derivative2y,1);
setDerivative <- Derivative2x = diff(V_x,2) <<- solveDerivative

list(set = set, get = get, 
 
             setDerivative = setDerivative, getDerivative = getDerivative)   }



The following  calculates the derivative of "x and y” created with the above function. 

cachemean <- function(x, ...) {
        m <- x$getDerivative()
        if(!is.null(m)) {
                message("getting cached data")
                return(m)
        }
        data <- x$get()
        m <- Derivative(data, ...)
        x$setDerivative(V_x,V_y)
        m
}






