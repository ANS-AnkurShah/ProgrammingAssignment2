makeCacheMatrix <- function(x = matrix()) {
    i <- NULL
  set <- function(y) {
          x <<- y
          i <<- NULL
  }
  get <- function() x
  setinverse <- function(inverse) i <<- inverse
  getinverse <- function() i
  list(set = set,
           #sets the value of the matrix
       get = get,
           #gets the value of the matrix
       setinverse = setinverse,
           #sets the value of the inverse
       getinverse = getinverse
           #gets the value of the inverse
       )
}

cacheSolve <- function(x, ...) {
  i <- x$getinverse()
  if (!is.null(i)) {
          message("getting cached data")
          return(i)
       #If the inverse has already been calculated, then cacheSolve should retrieve the inverse from the cache.
  }
  data <- x$get()
  i <- solve(data, ...)
  x$setinverse(i)
  i
}

#Solution:
 B <- matrix(c(1,2,3,4),2,2)
> B1 <- makeCacheMatrix(B)
> cacheSolve(B1)
     [,1] [,2]
[1,]   -2  1.5
[2,]    1 -0.5
> 
