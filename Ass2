## Put comments here that give an overall description of what your
## functions do

## Write a short comment describing this function

makeCacheMatrix <- function(x = matrix()) {
    # initial inv 
    inv <- NULL
    # set the input matrix
    set <- function(y) {
        x <<- y
        inv <<- NULL
    }
    # get the input matrix
    get <- function() x
    # set the inverse matrix of the input matrix
    setInverse <- function(inverse) inv <<- inverse
    # get the inverse matrix of the input matrix
    getInverse <- function() inv
    #make a list 
    list(set = set, get = get,
         setInverse = setInverse,
         getInverse = getInverse)
}


## Write a short comment describing this function

cacheSolve <- function(x, ...) {
    ## Return a matrix that is the inverse of 'x'
        inv <- x$getInverse()
        # determine whether we have calculated the inverse matrix before 
        if(!is.null(inv)) {
            message("getting cached data")
            return(inv)
        }
        data <- x$get()
        # compute the inverse matrix
        inv <- solve(data, ...)
        # store the inverse matrix into the cache
        x$setInverse(inv)
        inv
    
    }
