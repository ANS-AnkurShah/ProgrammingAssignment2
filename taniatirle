
## Here we are generating a pair of cuntions with the aim to cache the inverse 
## of a matrix. Our aim is to provide a matrix, from which we will obtain its 
## inverse. If our machine has already calculated the inserve of a matrix, we 
## want it to retrieve it from the cache.

makeCacheMatrix <- function(x = matrix()) {
    inv <- NULL
    set <- function(y){
        x <<- y
        inv <<- NULL
    }
    get <- function() x
    setInverse <- function() inv <<- solve(x)
    getInverse <- function() inv
    list(set = set, get = get, setInverse = setInverse, getInverse = getInverse)
}


## Write a short comment describing this function

cacheSolve <- function(x, ...) {
    inv <- x$getInverse()
    if(!is.null(inv)){
        message("getting cached data")
        return(inv)
    }
    data <- x$get()
    inv <- solve(data, ...)
    x$setInverse()
    inv
    ## Return a matrix that is the inverse of 'x'
}
